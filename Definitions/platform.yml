variables:
- name: PAC_OUTPUT_FOLDER
  value: ./Gemini/Output
- name: PAC_DEFINITIONS_FOLDER
  value: ./Gemini/Definitions
- name: planServiceConnection
  value: "spn-epac"
- name: deployServiceConnection
  value: "spn-epac"
- name: rolesServiceConnection
  value: "spn-epac"
- name: deploymentEnvironment
  value: "production"
- name: pacEnvironmentSelector
  value: "platform"


pool: Azure Pipelines

trigger:
  branches:
    include:
      - main
    # exclude:
    #   - refs/heads/release/*
    #   - refs/heads/hotfix/*
    #   - refs/heads/feature/*
    #   - refs/heads/bugfix/*
    #   - refs/heads/support/*

pr: none

stages:
  - stage: Plan
    displayName: "Plan ${{ variables.deploymentEnvironment }}"
    jobs:
      - job: Plan
        steps:
          - template: ../.azuredevops/plan.yml
            parameters:
              serviceConnection: $(planServiceConnection)
              pacEnvironmentSelector: $(pacEnvironmentSelector)

  - stage: Deploy
    displayName: "Deploy ${{ variables.deploymentEnvironment }} Policies and Roles"
    dependsOn: Plan
    condition: and(not(failed()), not(canceled()), or(eq(dependencies.Plan.outputs['Plan.Plan.deployPolicyChanges'], 'yes'), eq(dependencies.Plan.outputs['Plan.Plan.deployRoleChanges'], 'yes')), contains(variables['Build.SourceBranch'], 'main'))
    variables:
      PAC_INPUT_FOLDER: "$(Pipeline.Workspace)/plans-$(pacEnvironmentSelector)"
      localDeployPolicyChanges: $[stageDependencies.Plan.Plan.outputs['Plan.deployPolicyChanges']]
      localDeployRoleChanges: $[stageDependencies.Plan.Plan.outputs['Plan.deployRoleChanges']]
    jobs:
      - deployment: DeployPolicy
        displayName: "Deploy Policy Changes"
        environment: PAC-POLICY
        condition: and(not(failed()), not(canceled()), eq(variables.localDeployPolicyChanges, 'yes'))
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../.azuredevops/deploy-policy.yml
                  parameters:
                    serviceConnection: $(deployServiceConnection)
                    pacEnvironmentSelector: $(pacEnvironmentSelector)
      - deployment: DeployRoles
        displayName: "Deploy Role Changes"
        dependsOn: DeployPolicy
        environment: PAC-POLICY
        condition: and(not(failed()), not(canceled()), eq(variables.localDeployRoleChanges, 'yes'))
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../.azuredevops/deploy-roles.yml
                  parameters:
                    serviceConnection: $(rolesServiceConnection)
                    pacEnvironmentSelector: $(pacEnvironmentSelector)

